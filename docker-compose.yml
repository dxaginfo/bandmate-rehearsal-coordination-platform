version: '3.8'

services:
  # Frontend Next.js application
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:5000/api
      - NEXT_PUBLIC_GRAPHQL_URL=http://localhost:5000/graphql
      - NEXT_PUBLIC_SOCKET_URL=http://localhost:5000
      - NEXT_PUBLIC_TOKEN_NAME=bandmate_token
    volumes:
      - ./client:/app
      - /app/node_modules
    depends_on:
      - server

  # Backend Express server
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=development
      - PORT=5000
      - PG_HOST=db
      - PG_PORT=5432
      - PG_DATABASE=bandmate_dev
      - PG_USER=postgres
      - PG_PASSWORD=postgres
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=your-dev-secret-key
      - JWT_EXPIRES_IN=7d
    volumes:
      - ./server:/app
      - /app/node_modules
    depends_on:
      - db
      - redis

  # PostgreSQL database
  db:
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=bandmate_dev
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # Redis for caching and session storage
  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

volumes:
  postgres_data:
  redis_data:
